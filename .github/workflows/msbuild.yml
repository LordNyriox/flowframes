name: MSBuild

on:
  push:
    branches: [ main ]
  #pull_request:
  #  branches: [ main ]
  workflow_dispatch:

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./Code/Flowframes.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Check Repo and Sub Modules
      uses: actions/checkout@v4

    - name: Add Python to PATH
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Add NuGet to PATH
      uses: nuget/setup-nuget@v2
 
    - name: NuGet Restore
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build 64-Bit
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform="x64" ${{env.SOLUTION_FILE_PATH}}

    - name: Build Setup
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration="Release Setup" ${{env.SOLUTION_FILE_PATH}}

    - name: Upload 64-Bit EXE
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
       name: Flowframes # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
       path: ./**/Flowframes.exe
